<?php

/**
 * @file
 * Primary module hooks for custom comments module.
 */

use Drupal\comment\Entity\Comment;
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 */
function custom_comments_form_alter(array &$form, FormStateInterface $form_state, string $form_id): void {
  if($form_id == 'comment_comment_form') {
    $form['actions']['submit']['#submit'][]  = 'custom_comment_submit';
  }
}

/**
 * Custom submit handler to mark the working solution.
 */
function custom_comment_submit($form, &$form_state) {
  $values = $form_state->getValues();
  $current_comment_id = $values['cid'];
  $comment = Comment::load($current_comment_id);
  $entity_manager = \Drupal::entityTypeManager()->getStorage('comment');
  $cids = $entity_manager
    ->getQuery('AND')
    ->accessCheck(FALSE)
    ->condition('entity_id', $comment->entity_id->target_id)
    ->condition('entity_type', 'node')
    ->execute();

  foreach ($cids as $cid) {
    if($cid != $current_comment_id) {
      $comment = Comment::load($cid);
      $comment->set('field_mark_as_working_solution', FALSE);
      $comment->save();
    }
  }
}